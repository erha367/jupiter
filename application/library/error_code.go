package library

import (
	"encoding/json"
	"errors"
)

/**
 * @description：TODO
 * @author     ：yangsen
 * @date       ：2021/12/1 下午2:09
 * @company    ：eeo.cn
 */

var ErrorCodeJson string = `{
    "100":"参数不全或错误",
    "104":"操作失败\/未知错误",
    "105":"授权出错",
    "107":"数据格式不正确",
    "116":"文件格式不支持",
    "143":"没有此单课信息",
    "193":"文件夹不存在",
    "194":"文件夹不属于该机构，无权操作",
    "195":"请选择要上传的文件",
    "196":"文件夹无操作权限",
    "197":"上传文件失败",
    "198":"文件不存在",
    "199":"文件不属于该机构，无权操作",
    "200":"已存在同名文件",
    "201":"目标文件夹无操作权限",
    "202":"目标文件夹不能是当前文件夹",
    "203":"目标文件夹下已存在该文件",
    "204":"目标文件夹不存在",
    "205":"目标文件夹不属于该机构，无权操作",
    "206":"已存在同名文件夹",
    "207":"文件夹层级超出限制",
    "208":"文件夹数量超出限制",
    "209":"不能移动到自身或其子目录下",
    "210":"不能复制到自身或其子目录下",
    "211":"文件大小超出限制",
    "212":"文件个数超出限制",
    "305":"存在不属于该用户的文件夹，无权操作",
    "306":"存在不属于该用户的文件，无权操作",
    "307":"文件夹不属于同一层级，无法操作",
    "308":"文件不属于同一层级，无法操作",
    "383":"没有转换成功的文件",
    "703":"作业模板不存在",
    "711":"无操作权限",
    "901":"模板文件达到上限",
    "902":"单个文件夹下文件达到上限",
    "903":"模板名称已存在",
    "1023":"用户文件违规",
    "9001":"当前复制文件中包含的文件夹数量（包括文件夹中的文件夹）超过100个，不能完成复制。请减少复制的文件夹数量并重试。",
    "9002":"文件总量大小超过允许的最大值",
    "9006":"操作过于频繁,请稍后再试",
    "10002":"数据锁定",
    "28000":"文件数量不正确，请重新选择",
    "10003":"数据库操作异常",
    "10004":"数据不存在",
    "10005":"文件无操作权限",
    "10006":"参数异常",
    "28100":"系统错误：文档加载失败，请稍后重试",
    "28101":"系统错误：文档加载失败，请稍后重试",
    "28102":"没有文档的查看权限：你没有当前文档的访问权限",
    "28103":"文件名长度超过限制（128汉字）",
    "28104":"已达到最大协作者数量，请在删除列表内已有协作者后添加",
    "28150":"协作文档删除失败",
    "28151":"试卷资源创建失败",
    "28152":"试卷资源编辑失败",
    "28153":"协作文档复制失败",
    "28200":"备课包文件异常",
    "28300":"该用户无权限操作",
    "28301":"文件夹不属于该班级，无权操作",
    "28302":"文件夹名称超过限制(128汉字)",
    "28303":"您不属于此班级，无权限操作",
    "28304":"只有班主任才可以执行此操作",
    "28305":"用户文件名称不符合要求",
    "28306":"错误的文件id",
    "28307":"错误的文件夹id",
    "28308":"文件夹为空,无法删除内容",
    "28309":"文件不属于该班级，无权操作",
    "28310":"无权限移动|删除不属于您文件或目录",
    "28311":"无权限重命名不属于您的文件",
    "28312":"移动班级目录已超过层数限制",
    "28400":"授权资源不存在"
}`

//根据错误码获取错误信息
func GetErrorMsg(code string) (string, error) {
	var errCode map[string]string
	err := json.Unmarshal([]byte(ErrorCodeJson), &errCode)
	if err != nil {
		return ``, err
	}
	if val, ok := errCode[code]; ok {
		return val, nil
	}
	return ``, errors.New(`not found`)
}
